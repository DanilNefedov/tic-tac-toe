System.register("types", [], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("main", [], function (exports_2, context_2) {
    "use strict";
    var App, Squares;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [],
        execute: function () {
            window.onload = () => {
                const canvas = document.querySelector('canvas');
                if (canvas instanceof HTMLCanvasElement) {
                    const data = {
                        canvas,
                        width: 400,
                        height: 500
                    };
                    const app = new App(data);
                }
                else {
                    console.error('Canvas element not found.');
                }
            };
            App = class App {
                constructor(props) {
                    this.canvas = props.canvas;
                    this.ctx = this.canvas.getContext('2d');
                    this.canvas.width = props.width;
                    this.canvas.height = props.height;
                }
            };
            Squares = class Squares {
                constructor(props) {
                    this.x = props.x;
                    this.y = props.y;
                    this.width = props.width;
                    this.height = props.height;
                }
                drawSquares(ctx) {
                    ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(this.x, this.y, this.width, this.height);
                }
            };
        }
    };
});
